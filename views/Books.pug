extends layout

block content
  h1= title
  -let items = results
  div(class="container-fluid")
    div(class="row")
      each item,index in items
        div(class="col-sm-2",onClick=`buy(${index})`)
          p book_name:  #{item.book_name}
          p book_genre:  #{item.book_genre}
          p book_cost:  #{item.book_cost}
  script.
    function buy(N) {
      N=N+1;
      alert('You purchased item '+N);
    }

// Handle Books delete on DELETE.
exports.Books_delete = async function(req, res) {
   console.log("delete " + req.params.id)
   try {
   result = await Books.findByIdAndDelete( req.params.id)
   console.log("Removed " + result)
   res.send(result)
   } catch (err) {
   res.status(500)
   res.send(`{"error": Error deleting ${err}}`);
   }
  };


// Handle a show one view with id specified by query
exports.Books_view_one_Page = async function(req, res) {
   console.log("single view for id " + req.query.id)
   try{
   result = await Books.findById( req.query.id)
   res.render('Booksdetail',
  { title: 'Books Detail', toShow: result });
   }
   catch(err){
   res.status(500)
   res.send(`{'error': '${err}'}`);
   }
  };


  // Handle building the view for creating a Books.
// No body, no in path parameter, no query.
// Does not need to be async
exports.Books_create_Page = function(req, res) {
  console.log("create view")
  try{
  res.render('Bookscreate', { title: 'Books Create'});
  }
  catch(err){
  res.status(500)
  res.send(`{'error': '${err}'}`);
  }
 };


// Handle building the view for updating a Books.
// query provides the id
exports.Books_update_Page = async function(req, res) {
  console.log("update view for item "+req.query.id)
  try{
  let result = await Books.findById(req.query.id)
  res.render('Booksupdate', { title: 'Books Update', toShow: result });
  }
  catch(err){
  res.status(500)
  res.send(`{'error': '${err}'}`);
  }
 };

 // Handle a delete one view with id from query
exports.Books_delete_Page = async function(req, res) {
  console.log("Delete view for id " + req.query.id)
  try{
  result = await Books.findById(req.query.id)
  res.render('Booksdelete', { title: 'Books Delete', toShow: result });
  }
  catch(err){
  res.status(500)
  res.send(`{'error': '${err}'}`);
  }
 };
